<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hi, XiangNorth!</title>
  
  
  <link href="https://xiangnorth.com/atom.xml" rel="self"/>
  
  <link href="https://xiangnorth.com/"/>
  <updated>2022-07-12T15:00:29.125Z</updated>
  <id>https://xiangnorth.com/</id>
  
  <author>
    <name>XiangNorth</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我是如何发表博客的</title>
    <link href="https://xiangnorth.com/how-i-publish-blog"/>
    <id>https://xiangnorth.com/how-i-publish-blog</id>
    <published>2022-07-11T23:32:02.000Z</published>
    <updated>2022-07-12T15:00:29.125Z</updated>
    
    <content type="html"><![CDATA[<h2 id="prologue">Prologue<a title="#prologue" href="#prologue"></a></h2><h3 id="lofter">Lofter<a title="#lofter" href="#lofter"></a></h3><p>在 2014 年，我在 <a href="https://lofter.com/" target="_blank">Lofter</a> 开始了一段时间的博客写作生活，也成为了上面的首批用户。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/TKtK6U.png" alt="Lofter" loading="lazy" class="φbp"></p><p>有幸被 <a href="https://web.archive.org/web/20190315110511/http://yishuabear.lofter.com/" target="_blank">Wayback Manchine</a> 收录了一张快照。</p><p>那时刚接触 Android，也就是我人生的<strong>第一台属于自己的安卓手机</strong>——「中兴 U793」。在研究刷机，学习 ROM 制作的时候，我发现了 <a href="https://xda-developers.com/" target="_blank">XDA Developers</a>。</p><p>于是出于兴趣开始陆续搬运上面的相关文章。</p><h3 id="wordpress">WordPress<a title="#wordpress" href="#wordpress"></a></h3><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/tSsLNN.png" alt="WordPress" loading="lazy" class="φbp"></p><p>大名鼎鼎的 <a href="https://wordpress.com/" target="_blank">WordPress</a>，是我<strong>第一个</strong>个人网站的框架。</p><p>一句题外话，依稀记得当初 WordPress 中文官网被墙，英文官网能访问的魔幻现实。</p><p>由于当时经济能力限制，我曾辗转 <a href="https://www.hostinger.com/" target="_blank">Hostinger</a>，<a href="https://www.000webhost.com" target="_blank">000webhost</a>，以及国内各种杂七杂八的免费空间（什么「彩虹云」、「七朵云」、「千云」等等），当然这也直接导致了我众多密码的泄露，导致现在社工库里能有一连串密码</p><p>我也同时从 <a href="https://freenom.com/" target="_blank">freenom</a> 注册了<s>不止</s>一个免费域名。途中注册的波折也是我接触到「科学上网」的起源，至今仍记得当时凌晨在网吧，死活加载不出 CAPTCHA 的痛苦。</p><p>在网站搭建中，我也开始接触到 <code>PHP</code> <code>CSS</code> <code>MySQL</code>等事物，也是被当时 <a href="https://github.com/DIYgod" target="_blank">DIYgod</a> 的 WordPress 主题 Amativeness 所吸引，让我逐渐在后续的时间开始了学习，这些在<a href="/the-story-of-anya">「名为『Hexo-Theme-Anya』的故事」</a>一文中有详细描述，此处不作赘述。</p><h3 id="hexo">Hexo<a title="#hexo" href="#hexo"></a></h3><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/W0LtZ0.png" alt="Hexo" loading="lazy" class="φbp"></p><p>最后归宿来到了 <a href="https://hexo.io" target="_blank">Hexo</a>，是一个非常「简单」的博客框架。</p><p>接触到 Hexo 是因为接触到了 GitHub，与 WordPress 作为动态网站，需要一系列后端支撑不同，静态网站能够不用花费那么多心思就能将博客稳定搭建到 GitHub Pages，Vercel 等静态站点托管平台甚至是静态资源加速 CDN 上，让我轻松了不少。</p><p><strong>本篇文章写作时</strong>，博客便是搭建在在 Hexo 上。</p><h2 id="main">Main<a title="#main" href="#main"></a></h2><p>我的博客是一个静态网站，<strong>没有动态，没有 API，没有管理后台，没有任何的动态更新</strong>，只有一个静态页面。</p><p>她由 Hexo 驱动，样式由 <a href="https://github.com/ikeq/hexo-theme-inside" target="_blank">Inside</a> 提供，部署于 <a href="https://vercel.com/" target="_blank">Vercel</a> 平台，部分静态文件由 <a href="https://www.jsdelivr.com" target="_blank">jsDelivr</a> 提供 CDN 加速。</p><h3 id="ci/cd">CI/CD<a title="#ci/cd" href="#ci/cd"></a></h3><blockquote><p>在软件工程中，CI/CD或CICD通常指的是持续集成和持续交付或持续部署的组合实践。CI/CD通过在应用程序的构建、测试和部署中实施自动化，在开发和运营团队之间架起了桥梁。</p><footer><strong>Wikipedia</strong><cite><a href="https://zh.wikipedia.org/wiki/CI/CD">CI/CD</a></cite></footer></blockquote><p>在这里，主要是介绍 <a href="https://github.com/features/actions" target="_blank">GitHub Actions</a> 在部署我的博客中的使用，<strong>不会</strong>涉及 Hexo 怎么配置，怎么上传到。</p><figure class="highlight yaml"><figcaption><span>main.yml</span><a href="https://github.com/XiangNorth/XiangNorth.com/blob/main/.github/workflows/main.yml">workflows/main.yml</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Blog</span> <span class="string">CI/CD</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span> [<span class="string">push</span>, <span class="string">repository_dispatch</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">blog-cicd:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">blog</span> <span class="string">build</span> <span class="string">&amp;</span> <span class="string">deploy</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">codes</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16.x&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">node</span> <span class="string">modules</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">~/.npm</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;`-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          npm install hexo-cli -g</span></span><br><span class="line"><span class="string">          npm install</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">files</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">blog</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          git clone -b blog &quot;https://$&#123;&#123; secrets.GH_REF &#125;&#125;&quot; deploy_git</span></span><br><span class="line"><span class="string">          mv ./deploy_git/.git ./public/</span></span><br><span class="line"><span class="string">          cd ./public</span></span><br><span class="line"><span class="string">          git config user.name &quot;XiangNorth&quot;</span></span><br><span class="line"><span class="string">          git config user.email &quot;i@xiangnorth.com&quot;</span></span><br><span class="line"><span class="string">          git add .</span></span><br><span class="line"><span class="string">          git commit -m &quot;GitHub Actions Auto Builder at $(date +&#x27;%Y-%m-%d %H:%M:%S&#x27;)&quot;</span></span><br><span class="line"><span class="string">          git push --force --quiet &quot;https://XiangNorth:$&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;@$&#123;&#123; secrets.GH_REF &#125;&#125;&quot; blog:blog</span></span><br></pre></td></tr></table></figure><p>为了方便并「优雅」地部署，我使用了 <code>secrets.GITHUB_TOKEN</code> 来代替 GitHub 的 API Token，你可以在 <a href="https://docs.github.com/en/actions/security-guides/automatic-token-authentication" target="_blank">这篇文档</a> 了解更多。</p><p>原理是就是简单的，当「push」，或者手动触发——即「dispatch」——时，就会触发这个 CI/CD 进程：</p><div class="φbt"><ul><li>检查并配置环境</li><li>运行 <code>hexo generate</code></li><li>将生成的 <code>public</code> 目录通过自动生成的 <code>secrets.GITHUB_TOKEN</code> push 到 <code>blog</code> 分支</li><li>这时 Vercel 就会监听到并自动将该分支最新内容进行部署</li></ul></div><h3 id="editing">Editing<a title="#editing" href="#editing"></a></h3><h4 id="words">Words<a title="#words" href="#words"></a></h4><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/N8Ap28.png" alt="VS Code" loading="lazy" class="φbp"></p><p>得益于 VS Code 强大的拓展性，我可以轻松地在其中进行 Markdown 的写作的同时进行预览。</p><p>更有「markdownlint」、「GitHub Copilot」等插件帮助我写出更好的风格<s>以缓解强迫症</s>，或是自动联想出各种词条。</p><h4 id="images">Images<a title="#images" href="#images"></a></h4><p>我的博客文章图片的解决方案是「GitHub」+「jsDelivr CDN」，即将图片上传至我的图片专用仓库，然后通过 jsDelivr CDN 加载。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/z5qMXT.png" alt="uPic" loading="lazy" class="φbp"></p><p>我使用的上传工具为「uPic」, 它是一款开源的 macOS 软件，你可以去他的 <a href="https://github.com/gee1k/uPic" target="_blank">GitHub 主页</a> 开始使用或支持开发者。</p><h3 id="inspiration">Inspiration<a title="#inspiration" href="#inspiration"></a></h3><p>如何获取写作灵感，我使用了两种方式：</p><ul><li>通过不断经历获得感悟（学习、生活、工作）</li><li>通过阅读更多的<strong>原创文章</strong>，吸收其中的能量</li></ul><p>关于阅读原创文章，我更多是通过 RSS 订阅<a href="https://github.com/timqian/chinese-independent-blogs" target="_blank">「中文独立博客列表」</a>进行充能，如果您有兴趣也可以参考一份，也欢迎订阅 <a href="https://xiangnorth.com/atom.xml" target="_blank">本站的 RSS</a>。</p><p>也欢迎大家在这个被各种算法推荐流充斥的时代，尝试 RSS 这个稍显「落后」的阅读方式。</p><h2 id="epilogue">Epilogue<a title="#epilogue" href="#epilogue"></a></h2><p>最近正在学习 React，重构博客的想法也随着再次冒了出来。</p><p>在平时的阅读中也见过很多大佬或漂亮或优雅的页面，如<a href="https://tobiasahlin.com/blog/" target="_blank">「Tobias Ahlin」</a>和<a href="https://www.joshwcomeau.com/" target="_blank">「Josh W Comeau」</a>。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/EOkAE2.png" alt="Tobias Ahlin" loading="lazy" class="φbp"></p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/qInlvc.png" alt="Josh W Comeau" loading="lazy" class="φbp"></p><p>总之岁月静好，还有很多时间，我们慢慢来。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;prologue&quot;&gt;Prologue&lt;a title=&quot;#prologue&quot; href=&quot;#prologue&quot;&gt;&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id=&quot;lofter&quot;&gt;Lofter&lt;a title=&quot;#lofter&quot; href=&quot;#lofter&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
</summary>
      
    
    
    
    <category term="Coding Sheet" scheme="https://xiangnorth.com/categories/Coding-Sheet/"/>
    
    
    <category term="Blog" scheme="https://xiangnorth.com/tags/Blog/"/>
    
    <category term="Vercel" scheme="https://xiangnorth.com/tags/Vercel/"/>
    
    <category term="GitHub Actions" scheme="https://xiangnorth.com/tags/GitHub-Actions/"/>
    
  </entry>
  
  <entry>
    <title>名为「Hexo-Theme-Anya」的故事</title>
    <link href="https://xiangnorth.com/the-story-of-anya"/>
    <id>https://xiangnorth.com/the-story-of-anya</id>
    <published>2022-07-09T08:42:29.000Z</published>
    <updated>2022-07-12T15:00:29.125Z</updated>
    
    <content type="html"><![CDATA[<h3 id="楔子">楔子<a title="#楔子" href="#楔子"></a></h3><p>大概在 2013 年的秋季，小升初的我开始对 Lofter 有限的自定义感觉到厌倦，开始了解 WordPress，也在这途中机缘巧合第一次接触到了 DIYgod 大佬的 <a href="https://github.com/DIYgod/Amativeness" target="_blank">Amativeness</a>（没错，当时大佬还是用的 WordPress 平台，博客名为「Anotherhome」，后面才迁移到 Hexo），这便是 <a href="https://github.com/DIYgod/hexo-theme-sagiri" target="_blank">hexo-theme-sagiri</a> 的前身。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/Jsvh39.jpg" alt="Anotherhome" loading="lazy" class="φbp"></p><p>我首先是试着更改 Amativeness 的配色（原始色为红色，对应主题概念 Amativeness 即「恋爱」，顺便一提这是我第一次学到牛津大词典都没有的单词）以符合自己风格，因为当时对 HTML CSS JavaScript 一窍不通，改色便是用的控制台找到颜色 Hex 码，在代码里直接查找并替换的「土方法」，后期因为种种原因，建站计划终归是放弃了。</p><p>一晃几年后，在升入高中的同时我也开始逐渐零星学习一点前端知识，大佬也与时俱进的更新博客为 Hexo 驱动，并发布了 hexo-theme-sagiri。只记得<strong>不知 webpack 为何物</strong>的我对着 <code>*.min.js &amp; *.css</code> 一通乱改，最后也误打误撞完成了一个修改版，即「sagiri-x」（现已被我当做黑历史删除）。我也试着将其发布到 GitHub 与 npmjs 上，后续的发展反而出乎我的意料。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/8ofNM8.png" alt="sagiri-x" loading="lazy" class="φbp"></p><p>由于高中三年都是月假，加上本身没什么关注，我便很快忘了这事。高考完后的一天，我登上许久未上的微博，才发现快半年前收到了一位用户关于「sagiri-x」提的使用问题，之后，我也零星在各个平台（哔哩哔哩，QQ，etc）都发现了许多关于「sagiri-x」的留言，我才意识到，是博客上留下了这些联系方式。</p><p>在大学里，我虽然不是与前端有关专业（交通运输），但我也抽出很多时间去了解前端相关知识，也通过加入自媒体的技术部门，认识了许多计算机专业的同学，有了初步的系统化学习。</p><p>于是在 2022 年，我选择了制作「Hexo-theme-anya」。它基于「sagiri-x」](<a href="https://github.com/XiangNorth/Hexo-theme-anya/commit/dbf2b15518bedb5cbad6f666e024afb101644e58" target="_blank">https://github.com/XiangNorth/Hexo-theme-anya/commit/dbf2b15518bedb5cbad6f666e024afb101644e58</a>)，在此基础处上移除了无用代码，去除了 jQuery 依赖，目的是做出「<strong>开箱即用的 sagiri</strong>」，实际上他的样式基本全部继承 sagiri，我也暂时没有想做出大的改变，只想告诉九年前的自己：<strong>你想做的事，我现在已经为你完成了</strong>。</p><p>实际上，现在 DIYgod 大佬的 「sagiri」已经十分完善，只需一步<code>npm i</code>即可开始配置使用，我也推荐大家去大佬的博客：<a href="https://diygod.me" target="_blank">https://diygod.me</a> 去学习。大佬十分友善，我在初中时期还曾加过大佬的 QQ，有过相关交流，当时他还记得我是在博客下留言的那位，我开心了许久。</p><h3 id="task-1:-delete">Task 1: Delete<a title="#task-1:-delete" href="#task-1:-delete"></a></h3><p>「sagiri」基于大名鼎鼎的<a href="https://theme-next.js.org/https://theme-next.js.org/" target="_blank">「NexT」</a>主题，该主题至今仍在更新，不由得感叹时间飞逝。由于其强大的拓展能力（详情可见<a href="https://theme-next.js.org/docs/#Customize-Your-NexT=" target="_blank">「NexT 官方文档自定义页」</a>）,「sagiri」中也遗留了不少并未使用到的代码，因此主要做了以下工作。</p><ul><li>删除「sagiri」所基于的 Pisces 主题外的其余主题及其相关配置文件</li><li>删除背景不规则三角彩条，想添加可参考：<a href="https://zhuanlan.zhihu.com/p/28257724" target="_blank">https://zhuanlan.zhihu.com/p/28257724</a></li><li>删除鼠标点击动画，想添加可参考：<a href="https://github.com/DIYgod/hexo-theme-sagiri/blob/master/src/cursor-effects.js" target="_blank">https://github.com/DIYgod/hexo-theme-sagiri/blob/master/src/cursor-effects.js</a></li><li>删除 APlayer，DPlayer</li><li>删除多余评论系统（暂时只保留「gitment」「valine」），删除网站分析，删除第三方搜索</li><li>删除相关无用布局及样式文件</li></ul><h3 id="task-2:-update">Task 2: Update<a title="#task-2:-update" href="#task-2:-update"></a></h3><p>「sagiri」中使用了部分 jQuery 根据观察都可以通过现有的 DOM api 进行替换，出于学习角度考虑，也是一部分<a href="https://www.javatpoint.com/what-is-vanilla-javascript" target="_blank">「vanilla JavaScript」</a>强迫症的考虑，我进行了改写。</p><p>大概有如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择元素</span></span><br><span class="line">$(<span class="string">&quot;.element&quot;</span>) =&gt; <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.element&quot;</span>)/<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.element&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加事件</span></span><br><span class="line">$(<span class="string">&quot;.element&quot;</span>).[event](<span class="keyword">function</span>) =&gt; <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.element&quot;</span>).<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更改样式</span></span><br><span class="line">$(<span class="string">&quot;.element&quot;</span>).<span class="title function_">css</span>(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;#666&quot;</span>) =&gt; <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.element&quot;</span>).<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;#666&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类相关更改，removeClass 同理</span></span><br><span class="line">$(<span class="string">&quot;.element&quot;</span>).<span class="title function_">addClass</span>(<span class="string">&quot;active&quot;</span>) =&gt; <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.element&quot;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&quot;active&quot;</span>)</span><br></pre></td></tr></table></figure><p>还有许多不再枚举（主要是我也记不得了）。</p><p>此外是对配置文件进行了部分改进，增加了几项可用配置，删除了无用配置。</p><h3 id="task-3:-create">Task 3: Create<a title="#task-3:-create" href="#task-3:-create"></a></h3><p>在项目初期，我仍然叫她「sagiri」即<a href="https://zh.moegirl.org.cn/%E5%92%8C%E6%B3%89%E7%BA%B1%E9%9B%BE" target="_blank">「和泉纱雾」</a>。名字是曾风靡一时的动漫「埃罗芒阿老师」中的女主角<s>之一</s>，因为我本身也是妹控（嘻嘻），所以也是和 DIYgod <s>老师</s>一样当时喜欢上了这部动漫。</p><p>某一天我突然意识到，既然要做一个自己的主题，为什么不更改点特色呢。于是我选择以「anya」即「SPY×FAMILIY」中的「阿妮亚」为主题，进行了取色（图片源自 Twitter<a href="https://twitter.com/sc_ome/status/1218826941555363842" target="_blank">@sc_ome</a>）。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/Tk9xXv.jpg" alt="Figma" loading="lazy" class="φbp"></p><p>进行应用后主页的基本样式便形成了（顶部图片源自 pixiv<a href="https://www.pixiv.net/users/7849704" target="_blank">@みつなり都</a>）：</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/YR9spp.png" alt="Anya" loading="lazy" class="φbp"></p><p>当然，目前看来「anya」仍然只是「sagiri」的换皮版本，我也不否认这点。我会在今后的过程中不断完善、提升主题特色~~（怎么听起来有点像画大饼啊）~~。</p><h3 id="task-4:-read">Task 4: Read<a title="#task-4:-read" href="#task-4:-read"></a></h3><p>对于整体「anya」主题的「读」呢，实际上是更加完善的安装体验。</p><h4 id="开箱即用">开箱即用<a title="#开箱即用" href="#开箱即用"></a></h4><p>在用 「vanilla JavaScript」替换 jQuery 后，已经省去许多依赖项。仅在改动<code>*.js &amp; *.styl</code> 后需要执行依赖进行打包，这时需要安装依赖。因此我将其全部设为<code>devDependencies</code>。</p><p>不管是从 <code>npm &amp; yarn &amp; pnpm</code>等包管理器处安装，还是直接在主题项目的<code>Release</code>页面安装，都能够直接使用，而无需安装依赖。</p><h4 id="安装途径多元">安装途径多元<a title="#安装途径多元" href="#安装途径多元"></a></h4><p>据我的回忆，「sagiri」早期是支持 npm 安装的，不知为何几年后再看已经在 README 中删去这一行。</p><p>因此我将「anya」同步发行到 Release 及 npmjs，你也可以直接使用<code>git clone</code>克隆到你的<code>Hexo/themes</code>目录下。</p><p>顺便一提我一直以为 npm 等包管理器安装需要额外添加内容，后续查找许多资料才在 Sukka 的 <a href="https://blog.skk.moe/post/hexo-5/" target="_blank">这篇博文</a> 里发现了是 Hexo 自身新添的特性。</p><p><img src="https://cdn.jsdelivr.net/gh/XiangNorth/Living-room-for-Pic@main/2022/07/yRRKpJ.png" alt="Sukka" loading="lazy" class="φbp"></p><h3 id="跋">跋<a title="#跋" href="#跋"></a></h3><p>回首当年那个好奇「Amativeness」的少年，已九年过去，我在不断学习中，仍然时刻感觉到自己的无知与无力。还有很多要做的事，还有很多要学习才能去的地方，我感觉到有着满腔热情，还没耗尽，还得一点点去学习方法，不让这热情慢慢凉下去，无从发挥。</p><p>「anya」也只是刚刚开始，在今后的日子里我也会不断完善她，希望这篇文章也能随着完善不断更新。</p><h4 id="todo">TODO<a title="#todo" href="#todo"></a></h4><ul class="φbr" class="φbr" class="φbr" class="φbr"><li><input type="checkbox" disabled=""><i></i>接入更多评论系统</li><li><input type="checkbox" disabled=""><i></i>Lazyload 图片懒加载</li><li><input type="checkbox" disabled=""><i></i>更多的主题特色</li><li><input type="checkbox" disabled=""><i></i>删除未发现的无用代码</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;楔子&quot;&gt;楔子&lt;a title=&quot;#楔子&quot; href=&quot;#楔子&quot;&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;大概在 2013 年的秋季，小升初的我开始对 Lofter 有限的自定义感觉到厌倦，开始了解 WordPress，也在这途中机缘巧合第一次接触到了 DIYgod 大佬的 &lt;a</summary>
      
    
    
    
    <category term="Coding Sheet" scheme="https://xiangnorth.com/categories/Coding-Sheet/"/>
    
    
    <category term="Hexo" scheme="https://xiangnorth.com/tags/Hexo/"/>
    
    <category term="Theme" scheme="https://xiangnorth.com/tags/Theme/"/>
    
  </entry>
  
  <entry>
    <title>Hello World Neo</title>
    <link href="https://xiangnorth.com/hello-world-neo"/>
    <id>https://xiangnorth.com/hello-world-neo</id>
    <published>2001-07-11T00:00:00.000Z</published>
    <updated>2022-07-12T15:00:29.125Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank">GitHub</a>.</p><h2 id="quick-start">Quick Start<a title="#quick-start" href="#quick-start"></a></h2><h3 id="create-a-new-post">Create a new post<a title="#create-a-new-post" href="#create-a-new-post"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank">Writing</a></p><h3 id="run-server">Run server<a title="#run-server" href="#run-server"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank">Server</a></p><h3 id="generate-static-files">Generate static files<a title="#generate-static-files" href="#generate-static-files"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites<a title="#deploy-to-remote-sites" href="#deploy-to-remote-sites"></a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; targe</summary>
      
    
    
    
    <category term="Events book" scheme="https://xiangnorth.com/categories/Events-book/"/>
    
    
    <category term="Nothing" scheme="https://xiangnorth.com/tags/Nothing/"/>
    
  </entry>
  
</feed>
